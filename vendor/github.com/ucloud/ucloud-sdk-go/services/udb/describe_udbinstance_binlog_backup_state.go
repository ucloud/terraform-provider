//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UDB DescribeUDBInstanceBinlogBackupState

package udb

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// DescribeUDBInstanceBinlogBackupStateRequest is request schema for DescribeUDBInstanceBinlogBackupState action
type DescribeUDBInstanceBinlogBackupStateRequest struct {
	request.CommonBase

	// 可用区。参见 [可用区列表](../summary/regionlist.html)
	Zone *string `required:"true"`

	// 备份记录ID
	BackupId *int `required:"true"`

	// 跨可用区高可用备库所在可用区
	BackupZone *string `required:"false"`
}

// DescribeUDBInstanceBinlogBackupStateResponse is response schema for DescribeUDBInstanceBinlogBackupState action
type DescribeUDBInstanceBinlogBackupStateResponse struct {
	response.CommonBase

	// 备份状态 0 Backuping // 备份中 1 Success // 备份成功 2 Failed // 备份失败 3 Expired // 备份过期
	State string
}

// NewDescribeUDBInstanceBinlogBackupStateRequest will create request of DescribeUDBInstanceBinlogBackupState action.
func (c *UDBClient) NewDescribeUDBInstanceBinlogBackupStateRequest() *DescribeUDBInstanceBinlogBackupStateRequest {
	req := &DescribeUDBInstanceBinlogBackupStateRequest{}

	// setup request with client config
	c.client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// DescribeUDBInstanceBinlogBackupState - 获取udb实例备份状态
func (c *UDBClient) DescribeUDBInstanceBinlogBackupState(req *DescribeUDBInstanceBinlogBackupStateRequest) (*DescribeUDBInstanceBinlogBackupStateResponse, error) {
	var err error
	var res DescribeUDBInstanceBinlogBackupStateResponse

	err = c.client.InvokeAction("DescribeUDBInstanceBinlogBackupState", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
